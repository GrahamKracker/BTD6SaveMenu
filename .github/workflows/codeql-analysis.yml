# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '22 10 * * 4'
env:
  PROJECT_NAME: BTD6SaveMenu
  MOD_HELPER_BRANCH: 
  MELONLOADER_BRANCH: alpha-development
  
  MOD_HELPER_NAME: Btd6ModHelper
  BLOONSTD6: ./BloonsTD6
  
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

        
    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines. 
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh
    - name: Download Latest MelonLoader
      if: env.MELONLOADER_BRANCH == ''
      uses: robinraju/release-downloader@v1.4
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: LavaGang/MelonLoader
          fileName: MelonLoader.x64.zip
          tarBall: false
          zipBall: false
          latest: true
    - name: Extract Latest MelonLoader
      if: env.MELONLOADER_BRANCH == ''
      shell: bash
      run: unzip MelonLoader.x64.zip -d ${{ env.BLOONSTD6 }}


    - name: Download Specific MelonLoader
      if: env.MELONLOADER_BRANCH != ''
      uses: dawidd6/action-download-artifact@v2
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          branch: ${{ env.MELONLOADER_BRANCH }}
          name: MelonLoader.x64.CI.Release
          repo: LavaGang/MelonLoader
          path: ${{ env.BLOONSTD6 }}


    - name: Clone Dependencies Repo
      uses: actions/checkout@master
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: doombubbles/btd6-ci-dependencies
          ref: main
          path: ${{ env.BLOONSTD6 }}/MelonLoader/Managed


    - name: Download Latest Mod Helper
      uses: dsaltares/fetch-gh-release-asset@master
      if: env.MOD_HELPER_BRANCH == ''
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: gurrenm3/BTD-Mod-Helper
          fileName: ${{ env.MOD_HELPER_NAME }}.dll
          out-file-path: ${{ env.BLOONSTD6 }}/Mods/
          tarBall: false
          zipBall: false
          latest: true



    - name: Download btd6.targets
      shell: bash
      run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install -y wget
          fi
          wget https://raw.githubusercontent.com/gurrenm3/BTD-Mod-Helper/${{ env.MOD_HELPER_BRANCH }}/BloonsTD6%20Mod%20Helper/btd6.targets
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
          dotnet-version: 6.0.x # net6 can still build older as well


    - name: Build
      run: dotnet build -c Release -p:BloonsTD6="../${{ env.BLOONSTD6 }}" "${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj"
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
